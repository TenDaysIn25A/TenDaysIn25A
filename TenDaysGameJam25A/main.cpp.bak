#include "BackGround.h"
#include "Color.h"
#include "Input.h"
#include "Renderer.h"
#include "Transform2D.h"
#include <Novice.h>
#include <time.h>
#include "DrawEffects.h"
#include "PlayerTest.h"
#include "SceneManager.h"
#include "GameScene.h"
#include"Dlib.h"
#include"BackGround.h"

const char kWindowTitle[] = "LC1A_03_04_15_19_10DaysGameJam";


enum class SampleScene { DAICHI, MIDZUKI, YUTO, GAME_SCENE, COUNT };

// Windowsアプリでのエントリーポイント(main関数)
int WINAPI WinMain(HINSTANCE, HINSTANCE, LPSTR, int) {

	// ライブラリの初期化
	Novice::Initialize(kWindowTitle, 1280, 720);
	DeltaTime deltaTime;
	deltaTime.Initialize();

	Input input;
	//int grHandleBackGround = Novice::LoadTexture("./Resources/images/backGround.png");

	// ここで自身のサンプルシーンに切り替える。
	SampleScene currentSampleScene = SampleScene::GAME_SCENE;
	SampleSceneDaichi sampleSceneDaichi;
	SampleSceneMidzuki sampleSceneMidzuki;
	SampleSceneYuto sampleSceneYuto;

	SceneManager sceneManager;

	BackGround backGround;
	backGround.Initialize();

	unsigned int currentTime = static_cast<unsigned int>(time(nullptr));
	srand(currentTime);

	// ウィンドウの×ボタンが押されるまでループ
	while (Novice::ProcessMessage() == 0) {
		// フレームの開始
		Novice::BeginFrame();

		// キー入力を受け取る
		input.Update();
		
		// ----------------------------------------------------------
		// デバッグ用
		// ----------------------------------------------------------

		if (input.GetKeyTrigger(DIK_1)) {
			currentSampleScene = SampleScene::GAME_SCENE;
		}

		if (input.GetKeyTrigger(DIK_2)) {
			sampleSceneMidzuki.Initialize();
			currentSampleScene = SampleScene::MIDZUKI;
		}
		
		if (input.GetKeyTrigger(DIK_3)) {
			sampleSceneYuto.Initialize();
			currentSampleScene = SampleScene::YUTO;
		}
		
		if (input.GetKeyTrigger(DIK_4)) {
			sampleSceneDaichi.Initialize();
			currentSampleScene = SampleScene::DAICHI;
		}

		if (input.GetKeyTrigger(DIK_F1)) {
			sceneManager.ExchangeScene(Scene::TITLE);
		}

		if (input.GetKeyTrigger(DIK_F2)) {
			sceneManager.ExchangeScene(Scene::STAGE_SELECT);
		}

		if (input.GetKeyTrigger(DIK_F3)) {
			sceneManager.ExchangeScene(Scene::CONFIG);
		}

		if (input.GetKeyTrigger(DIK_F4)) {
			sceneManager.ExchangeScene(Scene::CREDIT);
		}

		if (input.GetKeyTrigger(DIK_F5)) {
			sceneManager.ExchangeScene(Scene::INGAME);
		}

		if (input.GetKeyTrigger(DIK_F6)) {
			sceneManager.ExchangeScene(Scene::GAMECLEAR);
		}
		
		if (input.GetKeyTrigger(DIK_F7)) {
			sceneManager.ExchangeScene(Scene::GAMEOVER);
		}

		
		// ----------------------------------------------------------
		// シーン
		// ----------------------------------------------------------

		

		// サンプルシーン、ここで各自が自由に作業できる。
		switch (currentSampleScene) {
		case SampleScene::DAICHI:
			
			sampleSceneDaichi.Update();
			sampleSceneDaichi.Draw();
			
			Novice::ScreenPrintf(0, 700, "Scene : DAICHI");
			break;
		case SampleScene::MIDZUKI:
			
			sampleSceneMidzuki.Update();
			sampleSceneMidzuki.Draw();
			
			Novice::ScreenPrintf(0, 700, "Scene : MIDZUKI");
			break;
		case SampleScene::YUTO:

			sampleSceneYuto.Update();
			sampleSceneYuto.Draw();

			Novice::ScreenPrintf(0, 700, "Scene : YUTO");
			break;

		case SampleScene::GAME_SCENE:

			sceneManager.Update();

			if (sceneManager.titleScene.buttonToEnd.IsClicked()) {
				sceneManager.currentScene = Scene::END;
			}

			//Novice::ScreenPrintf(0, 700, "Scene : GAME_SCENE");
			break;
		case SampleScene::COUNT:
			break;
		default:
			break;
		}

		deltaTime.Update();
		Novice::ScreenPrintf(1260, 0, "%d", static_cast<int>(1.0f / deltaTime.deltaTime));

		// フレームの終了
		Novice::EndFrame();

		if (sceneManager.currentScene == Scene::END) {
			break;
		}


	}


	// ライブラリの終了
	Novice::Finalize();
	return 0;
}
